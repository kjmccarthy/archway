name: 'Archway Tag Build and Deploy'
on:
  push:
    tags:
      - '*.*.*'
env:
  POSTGRES_HOST: localhost
  SBT_OPTS: '-Xss64m'
jobs:
  build-docker:
    name: 'Build, Test and deploy Docker image'
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:9.6
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: archway
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '9'
      - uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - run: ./flyway/flyway migrate -url="jdbc:postgresql://localhost:5432/archway" -user=postgres -password=postgres
      - run: sbt common/test
      - run: sbt api/test
      - run: sbt provisioning/test
      - run: sbt "set every test in assembly := {}" integration-test/assembly
      - run: sbt integration-test/test:package
      - run: sbt common/test:package
      - run: bin/docker-image
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Tag image and upload to ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: archway
        run: |
        docker tag archway $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.RELEASE_VERSION }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.RELEASE_VERSION }}